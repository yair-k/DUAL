{"version":3,"sources":["components/common/PageContainer/PageContainer.js","components/common/DarkModeButton/DarkModeButton.js","actions/triggerDarkMode.js","components/common/PageFooter/PageFooter.js","components/common/PageHeader/PageHeader.js","hooks/useStopWatch.js","hooks/useGame.js","components/Game/Cell/Cell.js","components/Game/ProgressBar/ProgressBar.js","components/Game/Result/StatsCharts/StatsChart.js","components/Game/Result/Result.js","components/Game/style.js","components/Game/Game.js","pages/Home/Home.js","App.js","reportWebVitals.js","reducers/triggerDarkMode.js","reducers/index.js","index.js"],"names":["Container","styled","div","PageContainer","children","DarkButton","button","DarkModeButton","dispatch","useDispatch","tabIndex","onClick","window","matchMedia","matches","document","body","classList","toggle","theme","contains","localStorage","setItem","type","Footer","footer","Credits","Options","Text","p","PageFooter","href","Header","PageHeader","useStopWatch","useState","isRunning","setIsRunning","elapsedTime","setElapsedTime","useEffect","interval","setInterval","prevElapsedTime","clearInterval","resetStopWatch","startStopWatch","stopStopWatch","INPUTS","Object","freeze","ARROW","LETTER","VALID_KEYS","87","65","83","68","38","40","37","39","GAME_STATE","useGame","generateCount","setGenerateCount","letterSequence","setLetterSequence","arrowSequence","setArrowSequence","arrow","letter","progress","setProgress","gameState","setGameState","letterLog","setLetterLogs","arrowLog","setArrowLogs","generateSequence","sequenceArrow","sequenceLetter","i","push","key","input","_","random","length","arrowCount","letterCount","logInput","wasCorrect","newLog","timePressed","correct","includes","resetGame","sequence","letters","arrows","changeGenerateCount","number","insertInput","keyCode","keys","toString","enteredKey","slice","gameButtonPress","logs","stopWatch","time","start","stop","reset","Circle","props","character","left","Cell","ProgressBarComponent","IndividualBackground","IndividualProgress","side","ProgressBar","ChartContainer","StatsChart","analysis","chartRef","useRef","triggerDarkMode","useSelector","state","primary","getComputedStyle","getPropertyValue","secondary","textColor","myChart","Chart","current","getContext","data","datasets","label","filter","item","map","x","y","borderWidth","tension","backgroundColor","borderColor","pointStyle","radius","stack","options","responsive","maintainAspectRatio","animation","plugins","legend","display","tooltip","callbacks","context","raw","charAt","toUpperCase","toFixed","scales","title","padding","color","font","family","ticks","align","callback","index","value","values","destroy","id","ref","ResultContainer","OverallStats","Stat","StatTitle","h3","StatArrow","StatNumber","h1","ResultNavigation","Result","accuracy","setAccuracy","apm","setApm","errors","setErrors","setAnalysis","allLogs","correctInput","incorrectInput","endTime","Math","max","apply","log","combinedLogs","sort","a","b","Console","ViewSplittor","VerticalBorder","View","generateCellStyles","isLeft","styles","css","LeftView","RightView","StopWatch","ResetButton","Game","ResetButtonRef","handleUserKeyPress","useCallback","event","preventDefault","focus","addEventListener","removeEventListener","resetButtonHandler","activeElement","blur","GridContainer","Home","App","currentTheme","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","triggerDarkModeReducer","action","allReducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19e44200.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  max-width: 1000px;\n  margin: auto;\n  padding: var(--default-padding);\n`\n\nconst PageContainer = ({ children }) => {\n  return <Container>\n    { children }\n  </Container>\n}\n\nexport default PageContainer","import React from 'react'\nimport { CgDarkMode } from 'react-icons/cg'\nimport styled from 'styled-components'\nimport { triggerDarkMode } from './../../../actions/triggerDarkMode'\nimport { useDispatch } from 'react-redux'\n\nconst DarkButton = styled.button`\n  display: flex;\n  outline: none;\n  background: none;\n  font-size: 2rem;\n  color: var(--color-text-main);\n  border: none;\n  cursor: pointer;\n`\n\n\nexport default function DarkModeButton() {\n  const dispatch = useDispatch()\n\n  const toggleDarkMode = () => {\n    const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n    if (prefersDarkScheme.matches) {\n      document.body.classList.toggle(\"light\");\n      let theme = document.body.classList.contains(\"light\") ? \"light\" : \"dark\";\n      localStorage.setItem(\"theme\", theme);\n    } else {\n      document.body.classList.toggle(\"dark\");\n      let theme = document.body.classList.contains(\"dark\") ? \"dark\" : \"light\";\n      localStorage.setItem(\"theme\", theme);\n    }\n\n    dispatch(triggerDarkMode())\n  }\n  return <DarkButton tabIndex=\"-1\" onClick={toggleDarkMode}><CgDarkMode /></DarkButton>\n}\n","export const triggerDarkMode = () => {\n  return {\n    type: 'TRIGGER'\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport DarkModeButton from './../DarkModeButton/DarkModeButton'\nimport { AiOutlineCode } from 'react-icons/ai'\n\nconst Footer = styled.footer`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0.5rem;\n`\nconst Credits = styled.div``\n\nconst Options = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\nconst Text = styled.p`\n  font-size: 0.8rem;\n  display: grid;\n  grid-template-columns: repeat(3, max-content);\n  place-items: center;\n  gap: var(--default-grid-gap);\n\n  & > a {\n    color: inherit;\n    text-decoration: none;\n    font-weight: bold;\n  }\n\n  & > a:hover{\n    color: var(--color-secondary);\n  }\n`\n\nconst PageFooter = () => {\n  return (\n    <Footer>\n      <Credits>\n        <Text><AiOutlineCode />Developed by <a href=\"https://yair.ca\" tabIndex=\"-1\">yair</a></Text>\n      </Credits>\n      <Options>\n        <DarkModeButton />\n      </Options>\n    </Footer>\n  )\n}\n\nexport default PageFooter","import styled from 'styled-components'\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  color: var(--color-text-main);\n  height: 100px;\n\n  & > svg {\n    height: 100%;\n    width: auto;\n  }\n\n  .logo-text {\n    fill: var(--color-text-main);\n    transition: fill ease 0.2s;\n  }\n  .logo-arrow > path:nth-child(1) {\n    fill: var(--color-primary);\n  }\n  .logo-arrow > path:nth-child(2) {\n    fill: var(--color-secondary);\n  }\n  .logo-arrow > path:nth-child(3) {\n    fill: var(--color-tertiary);\n  }\n  .logo-arrow > path:nth-child(4) {\n    fill: var(--color-quaternary);\n  }\n`\n\nconst PageHeader = () => {\n  return <Header>\n   <h2>DUAL</h2> \n  </Header>\n}\n\nexport default PageHeader","import { useState, useEffect } from 'react'\n\nconst useStopWatch = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n\n  useEffect(() => {\n      let interval;\n      if (isRunning) {\n        interval = setInterval(\n          () => setElapsedTime(prevElapsedTime => prevElapsedTime + 0.01),\n          10\n        );\n      }\n      return () => clearInterval(interval);\n    },[isRunning]);\n\n    return {\n      elapsedTime: elapsedTime,\n      resetStopWatch: () => setElapsedTime(0),\n      startStopWatch: () => setIsRunning(true),\n      stopStopWatch: () => setIsRunning(false),\n      isRunning: isRunning\n    }\n}\n\nexport default useStopWatch","import { useState, useEffect } from 'react'\nimport useStopWatch from './useStopWatch'\nimport _ from 'lodash'\n\nconst INPUTS = Object.freeze({\n  ARROW: ['up', 'down', 'left', 'right'],\n  LETTER: ['w', 'a', 's', 'd']\n})\n\nconst VALID_KEYS = {\n  87: 'w',\n  65: 'a',\n  83: 's',\n  68: 'd',\n  38: 'up',\n  40: 'down',\n  37: 'left',\n  39: 'right'\n}\n\nconst GAME_STATE = {\n  NEW: 'new',\n  RUNNING: 'running',\n  END: 'end',\n}\n\nconst useGame = () => {\n  const [generateCount, setGenerateCount] = useState(20)\n  const [letterSequence, setLetterSequence] = useState([])\n  const [arrowSequence, setArrowSequence] = useState([])\n  const { elapsedTime, startStopWatch, stopStopWatch, resetStopWatch } = useStopWatch()\n  const [progress, setProgress] = useState({ arrow: 0, letter: 0 })\n  const [gameState, setGameState] = useState(GAME_STATE.NEW)\n  const [letterLog, setLetterLogs] = useState([])\n  const [arrowLog, setArrowLogs] = useState([])\n\n  // Generate new sequence \n  const generateSequence = () => {\n    let sequenceArrow = []\n    let sequenceLetter = []\n\n    for (let i = 0; i < generateCount; i++) {\n      sequenceArrow.push({key: `arrow${i}`, input: INPUTS.ARROW[_.random(3)]})\n      sequenceLetter.push({key: `letter${i}`, input: INPUTS.LETTER[_.random(3)]})\n    }\n\n    setArrowSequence(sequenceArrow)\n    setLetterSequence(sequenceLetter)\n  }\n\n\n  // Handle correct wasd⬆⬇⬅➡ inputs\n  const gameButtonPress = (keyCode) => {\n    if (Object.keys(VALID_KEYS).includes(keyCode.toString())) {\n\n      if (gameState === GAME_STATE.NEW) {\n        startStopWatch()\n        setGameState(GAME_STATE.RUNNING)\n      }\n\n      let enteredKey = VALID_KEYS[keyCode]\n\n      if (arrowSequence.length > 0) {\n        if (arrowSequence[0].input === enteredKey) {\n          setArrowSequence(arrowSequence.slice(1))\n          logInput(enteredKey, 'arrow', true)\n          return true\n        } else if (INPUTS.ARROW.includes(enteredKey)) {\n          logInput(enteredKey, 'arrow', false)\n          return false\n        }\n      }\n\n      if (letterSequence.length > 0) {\n        if (letterSequence[0].input === enteredKey) {\n          setLetterSequence(letterSequence.slice(1))\n          logInput(enteredKey, 'letter', true)\n          return true\n        } else if (INPUTS.LETTER.includes(enteredKey)) {\n          logInput(enteredKey, 'letter', false)\n          return false\n        }\n        \n      }\n      return false\n    }\n  }\n\n\n  // Check for game end\n  useEffect(() => {\n    if (arrowSequence.length === 0 && letterSequence.length === 0 && gameState !== 'new') {\n      stopStopWatch()\n      setGameState(GAME_STATE.END)\n    }\n  }, [letterSequence, arrowSequence, stopStopWatch, gameState])\n\n  // Handle reset game\n  const resetGame = () => {\n    setGameState(GAME_STATE.NEW)\n    stopStopWatch()\n    resetStopWatch()\n    generateSequence()\n    setLetterLogs([])\n    setArrowLogs([])\n  }\n\n  // Update game progress on successful key input\n  useEffect(() => {\n    const arrowCount = arrowSequence.length\n    const letterCount = letterSequence.length\n    setProgress({\n      arrow: (generateCount - arrowCount) / generateCount,\n      letter: (generateCount - letterCount) / generateCount\n    })\n  },[letterSequence, arrowSequence, setProgress, generateCount])\n\n  // Log User Input\n  const logInput = (key, type, wasCorrect) => {\n    const newLog = {\n      key,\n      type,\n      timePressed: elapsedTime,\n      correct: wasCorrect\n    }\n    if (INPUTS.LETTER.includes(key)) {\n      setLetterLogs([...letterLog, newLog])\n    } else if (INPUTS.ARROW.includes(key)) {\n      setArrowLogs([...arrowLog, newLog])\n    }\n  }\n\n  return {\n    resetGame: () => resetGame(),\n    sequence: {\n      letters: letterSequence,\n      arrows: arrowSequence\n    },\n    generateSequence: () => generateSequence(),\n    generateCount,\n    changeGenerateCount: (number) => setGenerateCount(number),\n    insertInput: (keyCode) => gameButtonPress(keyCode),\n    gameState,\n    progress,\n    logs: {\n      letterLog,\n      arrowLog\n    },\n    stopWatch: {\n      time: elapsedTime,\n      start: () => startStopWatch,\n      stop: () => stopStopWatch,\n      reset: () => resetStopWatch\n    }\n  }\n}\n\nexport default useGame;","import styled from 'styled-components'\nimport { ImArrowUp, ImArrowDown, ImArrowLeft, ImArrowRight } from \"react-icons/im\";\n\nconst Circle = styled.div`\n  width: 100px;\n  height: 100px;\n  background-color: ${props => (\n    props.character === 'up' || props.character === 'w' ? 'var(--color-primary)'\n    : props.character === 'left' || props.character === 'a'  ? 'var(--color-secondary)'\n    : props.character === 'down' || props.character === 's'  ? 'var(--color-tertiary)'\n    : 'var(--color-quaternary)'\n  )};\n  border-radius: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 3rem;\n  position: absolute;\n  left: ${props => (\n    props.left ? '70%' : 'calc(30% - 100px)'\n  )};\n  top: calc(50% - 50px);\n  color: var(--color-background-main);\n  text-transform: capitalize;\n  font-weight: bold;\n  transition: transform ease 0.25s;\n`\n\nconst Cell = ({ character, left }) => {\n  return (\n    <>\n    <Circle character={character} left={left}>{ \n      character === 'up' ? <ImArrowUp /> : \n      character === 'down' ? <ImArrowDown /> : \n      character === 'left' ? <ImArrowLeft /> : \n      character === 'right' ? <ImArrowRight /> : \n      character\n    }</Circle>\n    {left}\n    </>\n  )\n}\n\nexport default Cell","import styled from 'styled-components'\n\nconst ProgressBarComponent = styled.div`\n  width: 100%;\n  max-width: 500px;\n  height: 10px;\n  border-radius: 5px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  overflow: hidden;\n  position: relative;\n`\nconst IndividualBackground = styled.div`\n  width: 100%;\n  background-color: var(--color-text-main);\n  filter: brightness(2.5);\n`\nconst IndividualProgress = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 10px;\n  ${props => (\n    props.side === 'right' ? 'right: 0'\n    : 'left: 0'\n  )};\n\n  &:before {\n    position: absolute;\n    ${props => (\n      props.side === 'right' ? 'left: 0'\n      : 'right: 0'\n    )};\n    content: '';\n    width: ${props => (\n      `${props.progress * 100}%`\n    )};\n    transition: width 0.2s ease;\n    height: 10px;\n    background-color: var(--color-primary);\n  }\n`\n\nconst ProgressBar = ({ progress }) => {\n  return <ProgressBarComponent>\n    <IndividualBackground />\n    <IndividualBackground />\n    <IndividualProgress side=\"left\" progress={progress.letter}/>\n    <IndividualProgress side=\"right\" progress={progress.arrow}/>\n  </ProgressBarComponent>\n}\n\nexport default ProgressBar","import React, { useRef, useEffect } from 'react'\nimport Chart from 'chart.js/auto';\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\n\nconst ChartContainer = styled.div`\n  height: 200px !important;\n  position: relative;\n`\n\nconst StatsChart = ({ analysis }) => {\n  const chartRef = useRef()\n  const triggerDarkMode = useSelector(state => state.triggerDarkMode)\n\n  useEffect(() => {\n    const primary = getComputedStyle(document.body).getPropertyValue('--color-primary');\n    const secondary = getComputedStyle(document.body).getPropertyValue('--color-secondary');\n    const textColor = getComputedStyle(document.body).getPropertyValue('--color-text-main');\n\n    const myChart = new Chart(chartRef.current.getContext('2d'), {\n      type: 'scatter',\n      data: {\n          datasets: [\n            {\n              label: 'Errors',\n              data:\n              analysis.filter(item => !item.correct).map((item) => {\n                const x = item.timePressed\n                const y = item.type\n                return {\n                  x: x,\n                  y: y\n                }\n              }),\n              borderWidth: 4,\n              tension: 0,\n              backgroundColor: primary,\n              borderColor: primary,\n              pointStyle: 'crossRot',\n              radius: 10,\n              stack: 'combined',\n              type: 'scatter'\n            },\n            {\n              label: 'Key Input',\n              data: analysis.map(item => ({y: item.type, x: item.timePressed})),\n              borderWidth: 3,\n              tension: 0,\n              backgroundColor: secondary,\n              borderColor: secondary,\n              stack: 'combined'\n            }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                return `${context.raw.y.charAt(0).toUpperCase() + context.raw.y.slice(1)} key at ${context.raw.x.toFixed(2)} seconds`\n              }\n            }\n          }\n        },\n        scales: {\n            y: {\n              title: {\n                padding: 20,\n                color: textColor,\n                font: {\n                  family: \"'Space Mono'\"\n                }\n              },\n              type: 'category',\n              ticks: {\n                color: textColor,\n                font: {\n                  family: \"'Space Mono'\"\n                },\n                align: 'center',\n                padding: 0,\n                callback: function(index, value, values) {\n                  return index === 0 ? 'Arrow Inputs:  ' : 'Letter Inputs:  '\n                }\n              }\n            },\n            x: {\n              type: 'linear',\n              ticks: {\n                color: textColor,\n                font: {\n                  family: \"'Space Mono'\"\n                }\n              }\n            }\n        }\n      }\n    })\n    return () => {\n      myChart.destroy()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [analysis, triggerDarkMode])\n\n  return (\n    <ChartContainer>\n      <canvas id=\"myChart\" ref={chartRef}></canvas>\n    </ChartContainer>\n  )\n}\n\nexport default StatsChart","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport StatsChart from './StatsCharts/StatsChart'\n\nconst ResultContainer = styled.div`\n  width: 100%;\n  padding: 1rem 2.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst OverallStats = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 1rem 0;\n`\n\nconst Stat = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--color-text-main);\n  width: 150px;\n`\nconst StatTitle = styled.h3`\n\n`\nconst StatArrow = styled.div`\n  margin-top: 1rem;\n  border: solid 1rem transparent;\n  border-top: solid 1rem ${props => (`var(--color-${props.color})`)};\n`\n\nconst StatNumber = styled.h1`\n\n`\n\nconst ResultNavigation = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Result = ({ children, logs, stopWatch, generateCount }) => {\n  const [accuracy, setAccuracy] = useState(0)\n  const [apm, setApm] = useState(0)\n  const [errors, setErrors] = useState(0)\n  const [analysis, setAnalysis] = useState([])\n\n  useEffect(() => {\n    // Find Accuracy\n    const allLogs = [...logs.letterLog, ...logs.arrowLog]\n    const correctInput = allLogs.filter(item => item.correct)\n    setAccuracy(correctInput.length / allLogs.length * 100)\n\n    // Find Number of Errors\n    const incorrectInput = allLogs.filter(item => !item.correct)\n    setErrors(incorrectInput.length)\n\n    // Find APM\n    const endTime = Math.max.apply(Math, allLogs.map(function(log) { return log.timePressed; }))\n    setApm(60 / endTime * correctInput.length)\n\n    // Combine Logs\n    let combinedLogs = [...logs.arrowLog, ...logs.letterLog].sort((a, b) => a.timePressed - b.timePressed)\n\n    setAnalysis(combinedLogs)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <>\n      <h1>Results</h1>\n      <ResultContainer>\n        <OverallStats>\n          <Stat>\n            <StatTitle title=\"Total Time Taken in Seconds\">Time Taken</StatTitle>\n            <StatArrow color=\"tertiary\"/>\n            <StatNumber>{ stopWatch.time.toFixed(2) }s</StatNumber>\n          </Stat>\n          <Stat>\n            <StatTitle title=\"Accurary\">Accuracy</StatTitle>\n            <StatArrow color=\"quaternary\"/>\n            <StatNumber>{ accuracy.toFixed(2) }%</StatNumber>\n          </Stat>\n          <Stat>\n            <StatTitle title=\"Actions Per Minute\">APM</StatTitle>\n            <StatArrow color=\"secondary\"/>\n            <StatNumber>{ apm.toFixed(0) }</StatNumber>\n          </Stat>\n          <Stat>\n            <StatTitle title=\"Total Number of Incorrect Inputs\">Errors</StatTitle>\n            <StatArrow color=\"primary\"/>\n            <StatNumber>{ errors }</StatNumber>\n          </Stat>\n        </OverallStats>\n        <StatsChart analysis={analysis} />\n        <ResultNavigation>{ children }</ResultNavigation>\n      </ResultContainer>\n    </>\n  )\n}\n\nexport default Result","import styled, { css } from 'styled-components'\n\nexport  const Console = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr auto auto;\n  width: 100%;\n  justify-items: center;\n`\nexport const ViewSplittor = styled.div`\n  display: grid;\n  grid-template-columns: 50% 3px 50%;\n  width: 100%;\n  max-width: calc(1000px - calc(2 * var(--default-padding)));\n  align-items: center;\n  overflow: hidden;\n`\nexport const VerticalBorder = styled.div`\n  background-color: var(--color-text-main);\n  height: 50%;\n  border-radius: 5px;\n  opacity: 0.25;\n`\nexport const View = styled.div`\n  width: 100%;\n  position: relative;\n  & > *:nth-child(1) {\n    transform: translateX(0) scale(1);\n    filter: brightness(1);\n  }\n`\nconst generateCellStyles = (isLeft) => {\n  let styles = \"\"\n\n  for (let i = 2; i < 30; i++) {\n    styles += `\n      & > *:nth-child(${i}) {\n        transform: translateX(${isLeft ? (-1 * 100 * (i - 1)) : (100 * (i - 1))}px) scale(0.6);\n        filter: brightness(0.8);\n      }\n    `\n  }\n  return css`${styles}`\n}\n\nexport const LeftView = styled(View)`\n  ${generateCellStyles(true)};\n`\nexport const RightView = styled(View)`\n  ${generateCellStyles(false)};\n`\nexport const StopWatch = styled.div`\n  display: grid;\n  place-items: center;\n  font-size: 5rem;\n  color: var(--color-text-main);\n`\n\nexport const ResetButton = styled.button`\n  margin-bottom: 1rem;\n  padding: 0.5rem 1.2rem;\n  display: grid;\n  place-items: center;\n  font-size: 1.75rem;\n  color: var(--color-text-main);\n  background: none;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  border-radius: 5px;\n  transition: all ease 0.2s;\n  \n  &:hover , &:focus {\n    background: var(--color-text-main);\n    color: var(--color-background-main);\n    filter: brightness(2.5);\n  }\n`","import React, { useEffect, useCallback, useRef } from 'react'\nimport useGame from './../../hooks/useGame'\nimport Cell from './Cell/Cell'\nimport ProgressBar from './ProgressBar/ProgressBar'\nimport Result from './Result/Result'\nimport { Console, StopWatch, ViewSplittor, LeftView, RightView, VerticalBorder, ResetButton } from './style'\nimport { BsArrowRepeat } from 'react-icons/bs'\n\nconst Game = () => {\n  const { \n    sequence,\n    generateSequence,\n    insertInput,\n    stopWatch,\n    resetGame,\n    progress,\n    gameState,\n    logs,\n    generateCount\n  } = useGame()\n\n  const ResetButtonRef = useRef();\n\n  useEffect(() => {\n    generateSequence()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleUserKeyPress = useCallback((event) => {\n    if(event.keyCode === 9) {\n      event.preventDefault()\n      ResetButtonRef.current.focus()\n    } else {\n      insertInput(event.keyCode)\n    }\n  },[insertInput])\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleUserKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  const resetButtonHandler = () => {\n    resetGame()\n    document.activeElement.blur()\n  }\n\n  return (\n    <Console>\n      { gameState !== 'end' ?\n        <>\n          <StopWatch>\n            { stopWatch.time.toFixed(2) }\n          </StopWatch>\n          <ViewSplittor>\n            <LeftView>\n              {sequence.letters.map(item => <Cell key={item.key} character={item.input} left={true} />)}\n            </LeftView>\n            <VerticalBorder />\n            <RightView>\n              {sequence.arrows.map(item => <Cell key={item.key} character={item.input} left={false} />)}\n            </RightView>\n          </ViewSplittor>\n          <ResetButton onClick={resetButtonHandler} ref={ResetButtonRef}><BsArrowRepeat /></ResetButton>\n          <ProgressBar progress={progress}/>\n        </> \n      :\n        <Result logs={logs} stopWatch={stopWatch} generateCount={generateCount}>\n          <ResetButton onClick={resetButtonHandler} ref={ResetButtonRef}><BsArrowRepeat /></ResetButton>\n        </Result>\n      }\n    </Console>\n  )\n}\n\nexport default Game","import React from 'react'\nimport styled from 'styled-components'\nimport PageContainer from './../../components/common/PageContainer/PageContainer'\nimport PageFooter from './../../components/common/PageFooter/PageFooter'\nimport PageHeader from './../../components/common/PageHeader/PageHeader'\nimport Game from './../../components/Game/Game'\n\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr auto;\n  min-height: calc(100vh - calc(2 * var(--default-padding)));\n  gap: 2rem;\n  width: 100%;\n`\n\nconst Home = () => {\n  return (\n    <PageContainer>\n      <GridContainer>\n        <PageHeader />\n        <Game />\n        <PageFooter />\n      </GridContainer>\n    </PageContainer>\n  )\n}\n\nexport default Home","import React, { useEffect } from 'react'\nimport Home from './pages/Home/Home'\n\nexport default function App() {\n  useEffect(() => {\n    const currentTheme = localStorage.getItem(\"theme\");\n    if (currentTheme === \"dark\") {\n      document.body.classList.toggle(\"dark\");\n    } else if (currentTheme === \"light\") {\n      document.body.classList.toggle(\"light\");\n    }\n  }, [])\n  \n  return (\n    <>\n      <Home />\n    </>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const triggerDarkModeReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'TRIGGER':\n      return state + 1\n    default:\n      return state\n  }\n}\n\nexport default triggerDarkModeReducer","import { combineReducers } from 'redux'\nimport triggerDarkModeReducer from './triggerDarkMode'\n\nconst allReducers = combineReducers({\n  triggerDarkMode: triggerDarkModeReducer\n})\n\nexport default allReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux'\nimport allReducers from './reducers'\nimport { Provider } from 'react-redux'\n \nconst store = createStore(allReducers)\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}